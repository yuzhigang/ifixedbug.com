<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iFixedBug.com</title>
    <link>https://www.ifixedbug.com/</link>
    <description>Recent content on iFixedBug.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 12 Feb 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.ifixedbug.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://www.ifixedbug.com/posts/goisforlovers/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://www.ifixedbug.com/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.&#xA;This document is a brief primer on using Go templates.</description>
    </item>
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://www.ifixedbug.com/posts/hugoisforlovers/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://www.ifixedbug.com/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.&#xA;Save it somewhere specific as we will be using it in the next step.&#xA;More complete instructions are available at Install Hugo&#xA;Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.&#xA;Follow the following steps:</description>
    </item>
    <item>
      <title>MathJax 支持</title>
      <link>https://www.ifixedbug.com/posts/mathjax%E6%94%AF%E6%8C%81/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://www.ifixedbug.com/posts/mathjax%E6%94%AF%E6%8C%81/</guid>
      <description>Inline Math # $abc$ $e^{\pi i}=-1$ $\frac{3}{2}$$abc$ $e^{\pi i}=-1$ $\frac{3}{2}$&#xA;Display Math # $$ \sum_{i=1}^{n}\int_{0}^{\pi}\log_2{e^n} $$$$ \sum_{i=1}^{n}\int_{0}^{\pi}\log_2{e^n} $$&#xA;Using Latex Codeblock # ``` latex f(n)= \begin{cases} f(n-1)+f(n-2) &amp;amp; n \ge 3 \\ 1 &amp;amp; n=1,2 \end{cases} ``` $$f(n)= \begin{cases} f(n-1)&amp;#43;f(n-2) &amp;amp; n \ge 3 \\ 1 &amp;amp; n=1,2 \end{cases}$$</description>
    </item>
    <item>
      <title>扩展语法支持</title>
      <link>https://www.ifixedbug.com/posts/%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95%E6%94%AF%E6%8C%81/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://www.ifixedbug.com/posts/%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95%E6%94%AF%E6%8C%81/</guid>
      <description>MkDocs 语法 # Hint # ::: markdown { title=Example, render=true } !!! note `markdown` text ::: markdown { title=Example, render=true } !!! note Custom Title `markdown` text&#xA;::: markdown { title=Example, render=true } ??? note Collapsible `markdown` text ::: markdown { title=Example, render=true } ???+ note Collapsible Open `markdown` text&#xA;Hint 允许包含和嵌套任意内容。&#xA;???+ bug ???+ bug ???+ bug Nested bugs.MkDocs 一共支持 12 种 Hint。&#xA;::: !!! note markdown text ::: !</description>
    </item>
    <item>
      <title></title>
      <link>https://www.ifixedbug.com/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.ifixedbug.com/archives/</guid>
      <description></description>
    </item>
    <item>
      <title>About</title>
      <link>https://www.ifixedbug.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.ifixedbug.com/about/</guid>
      <description>About Hugo # Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.&#xA;Hugo makes use of a variety of open source projects including:</description>
    </item>
    <item>
      <title>Search</title>
      <link>https://www.ifixedbug.com/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.ifixedbug.com/search/</guid>
      <description></description>
    </item>
    <item>
      <title>text</title>
      <link>https://www.ifixedbug.com/docs/example/folder_1/text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.ifixedbug.com/docs/example/folder_1/text/</guid>
      <description> h2 # h3 # h4 # </description>
    </item>
    <item>
      <title>动态api设计文档</title>
      <link>https://www.ifixedbug.com/posts/%E5%8A%A8%E6%80%81api%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://www.ifixedbug.com/posts/%E5%8A%A8%E6%80%81api%E8%AE%BE%E8%AE%A1/</guid>
      <description>更新记录 # 更新日期 版本 变更操作 变更内容 2024-03-27 V1.0 余志刚，创建 完成创建 2024-04-01 V1.1 余志刚，新增 完成实现代码章节 设计目标 # 目标： 用模板引擎的方式撰写一段Sql脚本模板，并指明对应的参数含义，发布后前端可以通过 /api/dynamic-api/invoke/my-api-name的方式直接调用，且调用支持多种HTTP方法和以不同的方式传递参数，如：查询参数、body和header参数方式。&#xA;基本过程 # api定义(ApiDefinition): 定义一个api，指明唯一的name和备注信息等，并指明它的sql脚本和数据库链接等。&#xA;连接池(ConnectionPool): 多个api请求数据库的数据时共享同一个连接池，减少建立链接的过程。为api指定连接池，即指明对应的数据库链接地址，则直接执行调用；&#xA;api参数(ApiParameter): 定义一个api需要的参数，该参数的名称需要上述sql脚本使用的脚本保持一致。&#xA;配置动态api的过程如下：&#xA;提供表单，用户填写api的基本信息，如：英文名称、请求方法、备注信息等； 用户填写api运行时要执行的sql脚本，注意这里要使用到模板引擎，有很多判空的逻辑。本系统推荐使用liquid模板。 为该api指明sql脚本执行时调用哪个链接，即使用哪个数据库。弹出连接池列表选中一个。 用户填写api是否支持分页和排序，若支持，则自动含有分页和排序对应的查询参数，如：pageSize\MaxResult\Sorting等。 用户为该api添加参数，参数分为：查询参数、body参数和header参数，另外也需要添加参数的名称。这些参数需要与第2步中，脚本引擎引用的变量名称保持一致。 发布该api，配置该api的可访问permissions。 测试api的可用性，提供参数的输入界面，点击测试后能返回对应的结果。 liquid模板的sql脚本实例如下：&#xA;{% assign param1 = &amp;#39;value1&amp;#39; %} {% assign param2 = &amp;#39;value2&amp;#39; %} {% assign param3 = null %} {% assign sql_query = &amp;#34;SELECT * FROM your_table WHERE 1=1&amp;#34; %} {% if param1 != null %} {% assign sql_query = sql_query | append: &amp;#34; AND column1 = &amp;#39;&amp;#34; | append: param1 | append: &amp;#34;&amp;#39;&amp;#34; %} {% endif %} {% if param2 !</description>
    </item>
  </channel>
</rss>
